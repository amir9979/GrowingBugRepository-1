diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java
index ba0da19..3fc5d61 100644
--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java
+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java
@@ -143,24 +143,6 @@ public final class JavaWriterTest {
         + "}\n");
   }
 
-  // If the initializer begins with a newline, don't emit a space after the '='.
-  @Test public void fieldDeclarationWithNewlineInitialValue() throws IOException {
-    javaWriter.emitPackage("com.squareup");
-    javaWriter.beginType("com.squareup.Foo", "class");
-    javaWriter.emitField("java.lang.String", "string", EnumSet.noneOf(Modifier.class),
-        "\n\"bar\"\n+ \"baz\"\n+ \"biz\"");
-    javaWriter.endType();
-    assertCode(""
-        + "package com.squareup;\n"
-        + "\n"
-        + "class Foo {\n"
-        + "  String string =\n"
-        + "      \"bar\"\n"
-        + "      + \"baz\"\n"
-        + "      + \"biz\";\n"
-        + "}\n");
-  }
-
   @Test public void abstractMethodDeclaration() throws IOException {
     javaWriter.emitPackage("com.squareup");
     javaWriter.beginType("com.squareup.Foo", "class");
