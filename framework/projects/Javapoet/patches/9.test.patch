diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java
index 4fae77f..4990037 100644
--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java
+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java
@@ -1,10 +1,7 @@
 // Copyright 2013 Square, Inc.
 package com.squareup.javawriter;
 
-import static com.squareup.javawriter.JavaWriter.stringLiteral;
-import static org.fest.assertions.api.Assertions.assertThat;
-import static org.fest.assertions.api.Assertions.failBecauseExceptionWasNotThrown;
-
+import com.example.Binding;
 import java.io.IOException;
 import java.io.StringWriter;
 import java.lang.reflect.Modifier;
@@ -13,10 +10,10 @@ import java.util.Collections;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Set;
-
 import org.junit.Test;
 
-import com.example.Binding;
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.fest.assertions.api.Assertions.failBecauseExceptionWasNotThrown;
 
 public final class JavaWriterTest {
   private final StringWriter stringWriter = new StringWriter();
@@ -412,40 +409,6 @@ public final class JavaWriterTest {
         + "}\n");
   }
 
-  @Test public void annotatedWithSingleAttribute() throws IOException {
-    Map<String, Object> attributes = new LinkedHashMap<String, Object>();
-    attributes.put("overrides", true);
-
-    javaWriter.emitPackage("com.squareup");
-    javaWriter.emitAnnotation("Module", attributes);
-    javaWriter.beginType("com.squareup.FooModule", "class", 0);
-    javaWriter.endType();
-    assertCode(""
-        + "package com.squareup;\n"
-        + "\n"
-        + "@Module(\n"
-        + "  overrides = true\n"
-        + ")\n"
-        + "class FooModule {\n"
-        + "}\n");
-  }
-
-  @Test public void annotatedWithSingleValueAttribute() throws IOException {
-    Map<String, Object> attributes = new LinkedHashMap<String, Object>();
-    attributes.put("value", stringLiteral("blah.Generator"));
-
-    javaWriter.emitPackage("com.squareup");
-    javaWriter.emitAnnotation("Generated", attributes);
-    javaWriter.beginType("com.squareup.FooModule", "class", 0);
-    javaWriter.endType();
-    assertCode(""
-        + "package com.squareup;\n"
-        + "\n"
-        + "@Generated(\"blah.Generator\")\n"
-        + "class FooModule {\n"
-        + "}\n");
-  }
-
   @Test public void annotatedWithAttributes() throws IOException {
     Map<String, Object> attributes = new LinkedHashMap<String, Object>();
     attributes.put("overrides", true);
