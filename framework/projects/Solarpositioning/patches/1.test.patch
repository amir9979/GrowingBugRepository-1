diff --git a/src/test/java/net/e175/klaus/solarpositioning/SPATest.java b/src/test/java/net/e175/klaus/solarpositioning/SPATest.java
index 4e45757..d4ecc86 100644
--- a/src/test/java/net/e175/klaus/solarpositioning/SPATest.java
+++ b/src/test/java/net/e175/klaus/solarpositioning/SPATest.java
@@ -129,32 +129,4 @@ public class SPATest {
         assertEquals("2015-06-17T17:11:04+1200", df.format(res[2].getTime()));
     }
 
-    @Test
-    public void testDSToffDay() {
-        GregorianCalendar time = new GregorianCalendar(TimeZone.getTimeZone("Europe/Berlin"));
-        time.set(2015, Calendar.OCTOBER, 25, 12, 0, 0);
-
-        GregorianCalendar[] res = SPA.calculateSunriseTransitSet(time, 52.33, 13.3, 68);
-
-        DateFormat df = getDateFormat(time);
-
-        assertEquals("2015-10-25T06:49:00+0100", df.format(res[0].getTime())); // NOAA: same (no seconds given)
-        assertEquals("2015-10-25T11:50:55+0100", df.format(res[1].getTime())); // NOAA: 11:50:53
-        assertEquals("2015-10-25T16:52:02+0100", df.format(res[2].getTime())); // NOAA: 16:52 (no seconds given)
-    }
-
-    @Test
-    public void testDSTonDay() {
-        GregorianCalendar time = new GregorianCalendar(TimeZone.getTimeZone("Europe/Berlin"));
-        time.set(2016, Calendar.MARCH, 27, 12, 0, 0);
-
-        GregorianCalendar[] res = SPA.calculateSunriseTransitSet(time, 52.33, 13.3, 68);
-
-        DateFormat df = getDateFormat(time);
-
-        assertEquals("2016-03-27T06:52:19+0200", df.format(res[0].getTime())); // NOAA: 06:52 (no seconds given)
-        assertEquals("2016-03-27T13:12:02+0200", df.format(res[1].getTime())); // NOAA: 13:12:01
-        assertEquals("2016-03-27T19:32:49+0200", df.format(res[2].getTime())); // NOAA: 19:33 (no seconds given)
-    }
-
 }
