diff --git a/src/test/java/org/deftserver/web/DeftSystemTest.java b/src/test/java/org/deftserver/web/DeftSystemTest.java
index bbc4728..bdb61e0 100644
--- a/src/test/java/org/deftserver/web/DeftSystemTest.java
+++ b/src/test/java/org/deftserver/web/DeftSystemTest.java
@@ -35,7 +35,6 @@ import org.apache.http.params.HttpParams;
 import org.apache.http.params.HttpProtocolParams;
 import org.deftserver.example.AsyncDbHandler;
 import org.deftserver.web.handler.RequestHandler;
-import org.deftserver.web.protocol.HttpRequest;
 import org.junit.BeforeClass;
 import org.junit.Test;
 
@@ -140,13 +139,6 @@ public class DeftSystemTest {
 		}
 	}
 	
-	public static class NoBodyRequestHandler extends RequestHandler {
-		@Override
-		public void get(HttpRequest request, org.deftserver.web.protocol.HttpResponse response) {
-			response.setStatusCode(200);
-		}
-	}
-	
 	@BeforeClass
 	public static void setup() {
 		Map<String, RequestHandler> reqHandlers = new HashMap<String, RequestHandler>();
@@ -162,7 +154,6 @@ public class DeftSystemTest {
 		reqHandlers.put("/capturing/([0-9]+)", new CapturingRequestRequestHandler());
 		reqHandlers.put("/throw", new ThrowingHttpExceptionRequestHandler());
 		reqHandlers.put("/async_throw", new AsyncThrowingHttpExceptionRequestHandler());
-		reqHandlers.put("/no_body", new NoBodyRequestHandler());
 		
 		final Application application = new Application(reqHandlers);
 		application.setStaticContentDir("src/test/resources");
@@ -554,27 +545,6 @@ public class DeftSystemTest {
 		assertNotNull(response.getFirstHeader("Last-Modified"));
 	}
 	
-	@Test
-	public void noBodyRequest() throws ClientProtocolException, IOException {
-		HttpClient httpclient = new DefaultHttpClient();
-		HttpGet httpget = new HttpGet("http://localhost:" + PORT + "/no_body");
-		HttpResponse response = httpclient.execute(httpget);
-		List<String> expectedHeaders = Arrays.asList(new String[] {"Server", "Date", "Content-Length", "Connection"});
-
-		assertEquals(200, response.getStatusLine().getStatusCode());
-		assertEquals(new ProtocolVersion("HTTP", 1, 1), response.getStatusLine().getProtocolVersion());
-		assertEquals("OK", response.getStatusLine().getReasonPhrase());
-
-		assertEquals(expectedHeaders.size(), response.getAllHeaders().length);
-
-		for (String header : expectedHeaders) {
-			assertTrue(response.getFirstHeader(header) != null);
-		}
-		
-		assertEquals("", convertStreamToString(response.getEntity().getContent()).trim());
-		assertEquals("0", response.getFirstHeader("Content-Length").getValue());
-	}
-	
 	public String convertStreamToString(InputStream is) throws IOException {
 		if (is != null) {
 			StringBuilder sb = new StringBuilder();
