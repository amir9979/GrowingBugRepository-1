diff --git a/src/test/java/org/shredzone/commons/suncalc/SunTimesTest.java b/src/test/java/org/shredzone/commons/suncalc/SunTimesTest.java
index b2a9e76..19caa3c 100644
--- a/src/test/java/org/shredzone/commons/suncalc/SunTimesTest.java
+++ b/src/test/java/org/shredzone/commons/suncalc/SunTimesTest.java
@@ -87,7 +87,7 @@ public class SunTimesTest {
     public void testAlert() {
         SunTimes t1 = SunTimes.compute().at(ALERT).on(2017, 8, 10).utc()
                         .truncatedTo(Unit.SECONDS).execute();
-        assertTimes(t1, null, null, "2017-08-10T16:13:09Z", true);
+        assertTimes(t1, null, null, "2017-08-10T16:12:47Z", true);
 
         SunTimes t2 = SunTimes.compute().at(ALERT).on(2017, 9, 24).utc()
                         .truncatedTo(Unit.SECONDS).execute();
@@ -95,26 +95,26 @@ public class SunTimesTest {
 
         SunTimes t3 = SunTimes.compute().at(ALERT).on(2017, 2, 10).utc()
                         .truncatedTo(Unit.SECONDS).execute();
-        assertTimes(t3, null, null, "2017-02-10T16:25:07Z", false);
+        assertTimes(t3, null, null, "2017-02-10T16:25:05Z", false);
 
         SunTimes t4 = SunTimes.compute().at(ALERT).on(2017, 8, 10).utc()
                         .fullCycle().truncatedTo(Unit.SECONDS).execute();
-        assertTimes(t4, "2017-09-06T05:13:15Z", "2017-09-06T03:06:02Z", "2017-08-10T16:13:09Z", true);
+        assertTimes(t4, "2017-09-06T05:13:15Z", "2017-09-06T03:06:02Z", "2017-08-10T16:12:47Z", true);
 
         SunTimes t5 = SunTimes.compute().at(ALERT).on(2017, 2, 10).utc()
                         .fullCycle().truncatedTo(Unit.SECONDS).execute();
-        assertTimes(t5, "2017-02-27T15:24:18Z", "2017-02-27T17:23:46Z", "2017-02-10T16:25:07Z", false);
+        assertTimes(t5, "2017-02-27T15:24:18Z", "2017-02-27T17:23:46Z", "2017-02-10T16:25:05Z", false);
 
         SunTimes t6 = SunTimes.compute().at(ALERT).on(2017, 9, 6).utc().oneDay()
                         .truncatedTo(Unit.SECONDS).execute();
-        assertTimes(t6, "2017-09-06T05:13:15Z", "2017-09-06T03:06:02Z", "2017-09-06T16:05:41Z");
+        assertTimes(t6, "2017-09-06T05:13:15Z", "2017-09-06T03:06:02Z", "2017-09-06T16:04:59Z");
     }
 
     @Test
     public void testWellington() {
         SunTimes t1 = SunTimes.compute().at(WELLINGTON).on(2017, 8, 10).timezone(WELLINGTON_TZ)
                         .truncatedTo(Unit.SECONDS).execute();
-        assertTimes(t1, "2017-08-09T19:18:33Z", "2017-08-10T05:34:50Z", "2017-08-10T00:26:28Z");
+        assertTimes(t1, "2017-08-09T19:18:33Z", "2017-08-10T05:34:50Z", "2017-08-10T00:26:26Z");
     }
 
     @Test
