diff --git a/src/main/java/net/lingala/zip4j/headers/HeaderReader.java b/src/main/java/net/lingala/zip4j/headers/HeaderReader.java
index 39f26b1..5bccf40 100755
--- a/src/main/java/net/lingala/zip4j/headers/HeaderReader.java
+++ b/src/main/java/net/lingala/zip4j/headers/HeaderReader.java
@@ -202,11 +202,11 @@ public class HeaderReader {
         }
 
         fileHeader.setFileName(fileName);
+        fileHeader.setDirectory(fileName.endsWith("/") || fileName.endsWith("\\"));
       } else {
         fileHeader.setFileName(null);
       }
 
-      fileHeader.setDirectory(isDirectory(fileHeader.getExternalFileAttributes(), fileHeader.getFileName()));
       readExtraDataRecords(zip4jRaf, fileHeader);
       readZip64ExtendedInfo(fileHeader, rawIO);
       readAesExtraDataRecord(fileHeader, rawIO);
@@ -750,17 +750,4 @@ public class HeaderReader {
       return null;
     }
   }
-
-  public boolean isDirectory(byte[] externalFileAttributes, String fileName) {
-    // first check if DOS attributes are set (lower order bytes from external attributes). If yes, check if the 4th bit
-    // which represents a directory is set. If UNIX attributes are set (higher order two bytes), check for the 6th bit
-    // in 4th byte which  represents a directory flag.
-    if (externalFileAttributes[0] != 0 && isBitSet(externalFileAttributes[0], 4)) {
-      return true;
-    } else if (externalFileAttributes[3] != 0 && isBitSet(externalFileAttributes[3], 6))  {
-      return true;
-    }
-
-    return fileName != null && (fileName.endsWith("/") || fileName.endsWith("\\"));
-  }
 }
diff --git a/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java b/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java
index d4ddb06..fea6922 100755
--- a/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java
+++ b/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java
@@ -94,10 +94,6 @@ public class ZipInputStream extends InputStream {
       localFileHeader.setCrc(fileHeader.getCrc());
       localFileHeader.setCompressedSize(fileHeader.getCompressedSize());
       localFileHeader.setUncompressedSize(fileHeader.getUncompressedSize());
-      // file header's directory flag is more reliable than local file header's directory flag as file header has
-      // additional external file attributes which has a directory flag defined. In local file header, the only way
-      // to determine if an entry is directory is to check if the file name has a trailing forward slash "/"
-      localFileHeader.setDirectory(fileHeader.isDirectory());
       canSkipExtendedLocalFileHeader = true;
     } else {
       canSkipExtendedLocalFileHeader = false;
diff --git a/src/main/java/net/lingala/zip4j/util/FileUtils.java b/src/main/java/net/lingala/zip4j/util/FileUtils.java
index b7f7adf..d6bfe11 100644
--- a/src/main/java/net/lingala/zip4j/util/FileUtils.java
+++ b/src/main/java/net/lingala/zip4j/util/FileUtils.java
@@ -232,11 +232,11 @@ public class FileUtils {
         File tmpFile = new File(fileCanonicalPath);
 
         if (tmpFile.isDirectory()) {
-          tmpFileName = tmpFileName.replaceAll("\\\\", ZIP_FILE_SEPARATOR);
+          tmpFileName = tmpFileName.replaceAll("\\\\", "/");
           tmpFileName += ZIP_FILE_SEPARATOR;
         } else {
           String bkFileName = tmpFileName.substring(0, tmpFileName.lastIndexOf(tmpFile.getName()));
-          bkFileName = bkFileName.replaceAll("\\\\", ZIP_FILE_SEPARATOR);
+          bkFileName = bkFileName.replaceAll("\\\\", "/");
           tmpFileName = bkFileName + getNameOfFileInZip(tmpFile, zipParameters.getFileNameInZip());
         }
 
@@ -493,7 +493,6 @@ public class FileUtils {
       windowsAttribute = setBitIfApplicable(dosFileAttributes.isReadOnly(), windowsAttribute, 0);
       windowsAttribute = setBitIfApplicable(dosFileAttributes.isHidden(), windowsAttribute, 1);
       windowsAttribute = setBitIfApplicable(dosFileAttributes.isSystem(), windowsAttribute, 2);
-      windowsAttribute = setBitIfApplicable(dosFileAttributes.isDirectory(), windowsAttribute, 4);
       windowsAttribute = setBitIfApplicable(dosFileAttributes.isArchive(), windowsAttribute, 5);
       fileAttributes[0] = windowsAttribute;
     } catch (IOException e) {
