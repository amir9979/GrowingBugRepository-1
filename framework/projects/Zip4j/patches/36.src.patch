diff --git a/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java b/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java
index 314c858..9e8c27f 100755
--- a/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java
+++ b/src/main/java/net/lingala/zip4j/io/inputstream/ZipInputStream.java
@@ -93,7 +93,17 @@ public class ZipInputStream extends InputStream {
 
     if (fileHeader != null) {
       localFileHeader.setCrc(fileHeader.getCrc());
-      localFileHeader.setCompressedSize(fileHeader.getCompressedSize());
+
+      // In case of jar files, directories' compressed size in file header is 2 and local file header is 0.
+      // The actual value of compressed size in file header should be 0.
+      // This is a workaround to ignore the comprressed size from file header if directory and is deflate and
+      // compressed sizes does not match
+      if (!(fileHeader.isDirectory()
+          && fileHeader.getCompressionMethod().equals(CompressionMethod.DEFLATE)
+          && fileHeader.getCompressedSize() != localFileHeader.getCompressedSize())) {
+        localFileHeader.setCompressedSize(fileHeader.getCompressedSize());
+      }
+
       localFileHeader.setUncompressedSize(fileHeader.getUncompressedSize());
       canSkipExtendedLocalFileHeader = true;
     } else {
@@ -300,7 +310,7 @@ public class ZipInputStream extends InputStream {
   }
 
   private void readUntilEndOfEntry() throws IOException {
-    if (localFileHeader.isDirectory() || localFileHeader.getCompressedSize() == 0) {
+    if (localFileHeader.getCompressedSize() == 0) {
       return;
     }
 
