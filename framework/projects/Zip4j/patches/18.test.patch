diff --git a/src/test/java/net/lingala/zip4j/MiscZipFileIT.java b/src/test/java/net/lingala/zip4j/MiscZipFileIT.java
index c7700ec..11bed8a 100644
--- a/src/test/java/net/lingala/zip4j/MiscZipFileIT.java
+++ b/src/test/java/net/lingala/zip4j/MiscZipFileIT.java
@@ -22,7 +22,6 @@ import java.io.OutputStream;
 import java.nio.charset.Charset;
 import java.nio.file.Paths;
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.List;
 import java.util.Set;
 import java.util.concurrent.ThreadFactory;
@@ -609,29 +608,6 @@ public class MiscZipFileIT extends AbstractIT {
     assertInputStreamsAreClosed(inputStreams);
   }
 
-  @Test
-  public void testCloseZipFileMultipleTimesClosesAllStreams() throws IOException {
-    ZipFile zipFile = new ZipFile(generatedZipFile);
-    zipFile.addFiles(FILES_TO_ADD);
-    List<InputStream> inputStreams = new ArrayList<>();
-
-    // First open the inputstreams
-    for (FileHeader fileHeader : zipFile.getFileHeaders()) {
-      inputStreams.add(zipFile.getInputStream(fileHeader));
-    }
-    // Close it for the first time
-    zipFile.close();
-    assertInputStreamsAreClosed(inputStreams);
-
-    //Now open an inputstream again
-    InputStream inputStream = zipFile.getInputStream(zipFile.getFileHeader(FILES_TO_ADD.get(0).getName()));
-
-    // Closing it now again should close the inputstream as well
-    zipFile.close();
-
-    assertInputStreamsAreClosed(Collections.singletonList(inputStream));
-  }
-
   private void assertInputStreamsAreClosed(List<InputStream> inputStreams) {
     for (InputStream inputStream : inputStreams) {
       try {
