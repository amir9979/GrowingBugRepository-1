diff --git a/src/main/java/net/lingala/zip4j/tasks/AbstractAddFileToZipTask.java b/src/main/java/net/lingala/zip4j/tasks/AbstractAddFileToZipTask.java
index 6703b53..472255d 100644
--- a/src/main/java/net/lingala/zip4j/tasks/AbstractAddFileToZipTask.java
+++ b/src/main/java/net/lingala/zip4j/tasks/AbstractAddFileToZipTask.java
@@ -11,7 +11,6 @@ import net.lingala.zip4j.model.enums.CompressionMethod;
 import net.lingala.zip4j.model.enums.EncryptionMethod;
 import net.lingala.zip4j.progress.ProgressMonitor;
 import net.lingala.zip4j.util.FileUtils;
-import net.lingala.zip4j.util.Zip4jUtil;
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -150,6 +149,7 @@ public abstract class AbstractAddFileToZipTask<T> extends AsyncZipTask<T> {
                                                     ProgressMonitor progressMonitor) throws IOException {
     ZipParameters clonedZipParameters = new ZipParameters(zipParameters);
     clonedZipParameters.setLastModifiedFileTime(javaToDosTime((fileToAdd.lastModified())));
+    clonedZipParameters.setFileNameInZip(fileToAdd.getName());
 
     if (fileToAdd.isDirectory()) {
       clonedZipParameters.setEntrySize(0);
@@ -160,10 +160,8 @@ public abstract class AbstractAddFileToZipTask<T> extends AsyncZipTask<T> {
     clonedZipParameters.setWriteExtendedLocalFileHeader(false);
     clonedZipParameters.setLastModifiedFileTime(fileToAdd.lastModified());
 
-    if (!Zip4jUtil.isStringNotNullAndNotEmpty(zipParameters.getFileNameInZip())) {
       String relativeFileName = getRelativeFileName(fileToAdd.getAbsolutePath(), zipParameters.getDefaultFolderPath());
       clonedZipParameters.setFileNameInZip(relativeFileName);
-    }
 
     if (fileToAdd.isDirectory()) {
       clonedZipParameters.setCompressionMethod(CompressionMethod.STORE);
