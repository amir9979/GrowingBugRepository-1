diff --git a/src/main/java/net/lingala/zip4j/headers/HeaderReader.java b/src/main/java/net/lingala/zip4j/headers/HeaderReader.java
index 7eea4f3..b8a2182 100755
--- a/src/main/java/net/lingala/zip4j/headers/HeaderReader.java
+++ b/src/main/java/net/lingala/zip4j/headers/HeaderReader.java
@@ -131,7 +131,13 @@ public class HeaderReader {
     endOfCentralDirectoryRecord.setOffsetOfStartOfCentralDirectory(rawIO.readLongLittleEndian(intBuff, 0));
 
     int commentLength = rawIO.readShortLittleEndian(zip4jRaf);
-    endOfCentralDirectoryRecord.setComment(readZipComment(zip4jRaf, commentLength, charset));
+    if (commentLength > 0) {
+      byte[] commentBuf = new byte[commentLength];
+      zip4jRaf.readFully(commentBuf);
+    endOfCentralDirectoryRecord.setComment(new String(commentBuf, charset));
+    } else {
+      endOfCentralDirectoryRecord.setComment(null);
+    }
 
     zipModel.setSplitArchive(endOfCentralDirectoryRecord.getNumberOfThisDisk() > 0);
     return endOfCentralDirectoryRecord;
@@ -732,19 +738,4 @@ public class HeaderReader {
       randomAccessFile.seek(pos);
     }
   }
-
-  private String readZipComment(RandomAccessFile raf, int commentLength, Charset charset) {
-    if (commentLength <= 0) {
-      return null;
-    }
-
-    try {
-      byte[] commentBuf = new byte[commentLength];
-      raf.readFully(commentBuf);
-      return new String(commentBuf, charset);
-    } catch (IOException e) {
-      // Ignore any exception and set comment to null if comment cannot be read
-      return null;
-    }
-  }
 }
