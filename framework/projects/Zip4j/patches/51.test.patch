diff --git a/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java b/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java
index cc85aec..776cde8 100644
--- a/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java
+++ b/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java
@@ -37,7 +37,6 @@ import static net.lingala.zip4j.util.FileUtils.isUnix;
 import static net.lingala.zip4j.util.FileUtils.isWindows;
 import static net.lingala.zip4j.util.InternalZipConstants.MIN_BUFF_SIZE;
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.assertj.core.api.Assertions.fail;
 
 public class ZipOutputStreamIT extends AbstractIT {
 
@@ -254,39 +253,6 @@ public class ZipOutputStreamIT extends AbstractIT {
     verifyZipFileByExtractingAllFiles(generatedZipFile, outputFolder, 2);
   }
 
-
-    @Test
-    public void testPutNextEntryWithEmptyFileNameInZipParameters() throws IOException {
-      ZipParameters zParams = new ZipParameters();
-      zParams.setFileNameInZip("");
-
-      try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(generatedZipFile))) {
-        try {
-          zos.putNextEntry(zParams);
-          fail("Suppose to throw an exception");
-        } catch (Exception ex) {
-          assertThat(ex).isInstanceOf(IllegalArgumentException.class);
-          assertThat(ex).hasMessageContaining("fileNameInZip is null or empty");
-        }
-      }
-    }
-
-    @Test
-    public void testPutNextEntryWithNullFileNameInZipParameters() throws IOException {
-      ZipParameters zParams = new ZipParameters();
-      zParams.setFileNameInZip(null);
-
-      try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(generatedZipFile))) {
-        try {
-          zos.putNextEntry(zParams);
-          fail("Suppose to throw an exception");
-        } catch (Exception ex) {
-          assertThat(ex).isInstanceOf(IllegalArgumentException.class);
-          assertThat(ex).hasMessageContaining("fileNameInZip is null or empty");
-        }
-      }
-    }
-
   private void testZipOutputStream(CompressionMethod compressionMethod, boolean encrypt,
                                    EncryptionMethod encryptionMethod, AesKeyStrength aesKeyStrength,
                                    AesVersion aesVersion)
