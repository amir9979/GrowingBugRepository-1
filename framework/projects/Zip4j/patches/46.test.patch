diff --git a/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java b/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java
index 813c84d..8b83c5b 100644
--- a/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java
+++ b/src/test/java/net/lingala/zip4j/io/outputstream/ZipOutputStreamIT.java
@@ -219,25 +219,6 @@ public class ZipOutputStreamIT extends AbstractIT {
     verifyDefaultFileAttributes();
   }
 
-  @Test
-  public void testCreatingZipWithoutClosingEntryManuallySuccessfullyClosesEntry() throws IOException {
-    try (ZipOutputStream zipOutputStream = new ZipOutputStream(new FileOutputStream(generatedZipFile))) {
-      File fileToAdd = getTestFileFromResources("file_PDF_1MB.pdf");
-      byte[] buffer = new byte[InternalZipConstants.BUFF_SIZE];
-      int readLen;
-      ZipParameters zipParameters = new ZipParameters();
-      zipParameters.setFileNameInZip(fileToAdd.getName());
-      zipOutputStream.putNextEntry(zipParameters);
-      try (InputStream inputStream = new FileInputStream(fileToAdd)) {
-        while ((readLen = inputStream.read(buffer)) != -1) {
-          zipOutputStream.write(buffer, 0, readLen);
-        }
-      }
-    }
-
-    verifyZipFileByExtractingAllFiles(generatedZipFile, outputFolder, 1);
-  }
-
   private void testZipOutputStream(CompressionMethod compressionMethod, boolean encrypt,
                                    EncryptionMethod encryptionMethod, AesKeyStrength aesKeyStrength,
                                    AesVersion aesVersion)
@@ -434,4 +415,4 @@ public class ZipOutputStreamIT extends AbstractIT {
 
     return zipFile;
   }
-}
+}
\ No newline at end of file
