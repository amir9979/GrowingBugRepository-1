diff --git a/src/test/java/spoon/test/prettyprinter/DefaultPrettyPrinterTest.java b/src/test/java/spoon/test/prettyprinter/DefaultPrettyPrinterTest.java
index 73e2f110..29c8b69d 100644
--- a/src/test/java/spoon/test/prettyprinter/DefaultPrettyPrinterTest.java
+++ b/src/test/java/spoon/test/prettyprinter/DefaultPrettyPrinterTest.java
@@ -1,7 +1,6 @@
 package spoon.test.prettyprinter;
 
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
 
 import java.util.List;
 
@@ -39,26 +38,4 @@ public class DefaultPrettyPrinterTest {
 		CtInvocation<?> mathAbsInvocation = elements.get(1);
 		assertEquals("java.lang.Math.abs(message.length())", mathAbsInvocation.toString());
 	}
-	
-	@Test
-	public void superInvocationWithEnclosingInstance() throws Exception {
-		
-		/**
-		 * To extend a nested class an enclosing instance must be provided
-		 * to call the super constructor.
-		 */
-		
-		String sourcePath = "./src/test/resources/spoon/test/prettyprinter/NestedSuperCall.java";
-		List<SpoonResource> files = SpoonResourceHelper.resources(sourcePath);
-		assertEquals(1, files.size());
-		
-		SpoonCompiler comp = new Launcher().createCompiler();
-		comp.addInputSources(files);
-		comp.build();
-		
-		Factory factory = comp.getFactory();
-		CtSimpleType<?> theClass = factory.Type().get("spoon.test.prettyprinter.NestedSuperCall");
-		
-		assertTrue(theClass.toString().contains("nc.super(\"a\")"));
-	}
 }
