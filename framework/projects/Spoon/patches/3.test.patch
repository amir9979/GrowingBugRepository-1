diff --git a/src/test/java/spoon/test/annotation/AnnotParamTypes.java b/src/test/java/spoon/test/annotation/AnnotParamTypes.java
deleted file mode 100644
index 2f26e2db..00000000
--- a/src/test/java/spoon/test/annotation/AnnotParamTypes.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package spoon.test.annotation;
-
-public @interface AnnotParamTypes {
-
-	int integer();
-	int[] integers();
-
-	String string();
-	String[] strings();
-
-	Class<?> clazz();
-	Class<?>[] classes();
-	
-	boolean b();
-	byte byt();
-	char c();
-	short s();
-	long l();
-	float f();
-	double d();
-	
-	AnnotParamTypeEnum e();
-}
-
-enum AnnotParamTypeEnum { R,G,B; }
\ No newline at end of file
diff --git a/src/test/java/spoon/test/annotation/AnnotationTest.java b/src/test/java/spoon/test/annotation/AnnotationTest.java
index 6f242e86..258fec03 100644
--- a/src/test/java/spoon/test/annotation/AnnotationTest.java
+++ b/src/test/java/spoon/test/annotation/AnnotationTest.java
@@ -15,12 +15,10 @@ import org.junit.Test;
 import spoon.Launcher;
 import spoon.compiler.SpoonResourceHelper;
 import spoon.reflect.declaration.CtAnnotation;
-import spoon.reflect.declaration.CtMethod;
 import spoon.reflect.declaration.CtParameter;
 import spoon.reflect.declaration.CtSimpleType;
 import spoon.reflect.factory.Factory;
 import spoon.reflect.visitor.DefaultJavaPrettyPrinter;
-import spoon.reflect.visitor.filter.NameFilter;
 import spoon.reflect.visitor.filter.TypeFilter;
 
 public class AnnotationTest {
@@ -46,7 +44,6 @@ public class AnnotationTest {
 		spoon.createCompiler(
 				factory,
 				SpoonResourceHelper.resources(
-						"./src/test/java/spoon/test/annotation/AnnotParamTypes.java",
 						"./src/test/java/spoon/test/annotation/Bound.java",
 						"./src/test/java/spoon/test/annotation/Main.java"))
 				.build();
@@ -82,58 +79,4 @@ public class AnnotationTest {
 		assertTrue(a2.getElementValues().containsKey("value"));
 	}
 
-	
-	@Test
-	public void testAnnotationParameterTypes() throws Exception {
-		// we can not use TestUtils.build because we need to compile two classes
-		// at the same time
-		Launcher spoon = new Launcher();
-		Factory factory = spoon.createFactory();
-		spoon.createCompiler(
-				factory,
-				SpoonResourceHelper.resources(
-						"./src/test/java/spoon/test/annotation/AnnotParamTypes.java",
-						"./src/test/java/spoon/test/annotation/Bound.java",
-						"./src/test/java/spoon/test/annotation/Main.java"))
-				.build();
-
-		CtSimpleType<?> type = factory.Package().get("spoon.test.annotation")
-				.getType("Main");
-		
-		CtMethod<?> m1 = type.getElements(
-				new NameFilter<CtMethod<?>>("m1")).get(0);
-		List<CtAnnotation<? extends Annotation>> annotations = m1
-				.getAnnotations();
-		CtAnnotation<?> a = annotations.toArray(new CtAnnotation[0])[0];
-		AnnotParamTypes annot = (AnnotParamTypes) a.getActualAnnotation();
-		assertEquals(42,annot.integer());
-		assertEquals(1,annot.integers().length);
-		assertEquals("Hello World!",annot.string());
-		assertEquals(2,annot.strings().length);
-		assertEquals(Integer.class,annot.clazz());
-		assertEquals(2,annot.classes().length);
-		assertEquals(true,annot.b());
-		assertEquals('c',annot.c());
-		assertEquals(42,annot.byt());
-		assertEquals((short)42,annot.s());
-		assertEquals(42,annot.l());
-		assertEquals(3.14f,annot.f(),0f);
-		assertEquals(3.14159,annot.d(),0);
-		
-		CtMethod<?> m2 = type.getElements(
-				new NameFilter<CtMethod<?>>("m2")).get(0);
-		annotations = m2.getAnnotations();
-		a = annotations.toArray(new CtAnnotation[0])[0];
-		annot = (AnnotParamTypes) a.getActualAnnotation();
-		assertEquals(42,annot.integer());
-		assertEquals(1,annot.integers().length);
-		assertEquals("Hello World!",annot.string());
-		assertEquals(2,annot.strings().length);
-		assertEquals(false,annot.b());
-		assertEquals(42,annot.byt());
-		assertEquals((short)42,annot.s());
-		assertEquals(42,annot.l());
-		assertEquals(3.14f,annot.f(),0f);
-		assertEquals(3.14159,annot.d(),0);
-	}
 }
diff --git a/src/test/java/spoon/test/annotation/Main.java b/src/test/java/spoon/test/annotation/Main.java
index 2a0b7bb5..cb4997ed 100644
--- a/src/test/java/spoon/test/annotation/Main.java
+++ b/src/test/java/spoon/test/annotation/Main.java
@@ -1,35 +1,9 @@
 package spoon.test.annotation;
 
+
 public class Main {
 
 	public void m(@Bound(max = 8) int a) {
 	} 
 
-	@AnnotParamTypes(
-		integer=42, integers={42},
-		string="Hello World!", strings={"Hello","World"},
-		clazz=Integer.class, classes={Integer.class, String.class},
-		b=true, byt=42, c='c', s=(short)42, l=42, f=3.14f, d=3.14159,
-		e=AnnotParamTypeEnum.G)
-	public void m1() {}
-	
-	final public static int INTEGER = 42;
-	final public static String STRING = "Hello World!";
-	final public static String STRING1 = "Hello";
-	final public static String STRING2 = "world";
-	final public static boolean BOOLEAN = false;
-	final public static byte BYTE = 42;
-	final public static char CHAR = 'c';
-	final public static short SHORT = 42;
-	final public static short LONG = 42;
-	final public static float FLOAT = 3.14f;
-	final public static double DOUBLE = 3.14159;
-
-	@AnnotParamTypes(
-		integer=INTEGER, integers={INTEGER},
-		string=STRING, strings={STRING1,STRING2},
-		clazz=Integer.class, classes={Integer.class, String.class},
-		b=BOOLEAN, byt=BYTE, c=CHAR, s=SHORT, l=LONG, f=FLOAT, d=DOUBLE,
-		e=AnnotParamTypeEnum.G)
-	public void m2() {}
 }
